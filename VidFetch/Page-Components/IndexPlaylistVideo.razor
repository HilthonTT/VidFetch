@inject IVideoLibrary videoLibrary
@inject IYoutube youtube
@inject IVideoData videoData
@inject ISettingsData settingsData
@inject ISnackbar snackbar
@inject ITokenHelper tokenHelper
@inject ISearchHelper searchHelper
@inject IVideoLibraryHelper videoLibraryHelper

<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudTextField @bind-Value="_playlistUrl"
                      Label="Enter Playlist Url"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="LoadPlaylist"
                      Required="true"
                      Clearable="true" />
    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12">
        @if (_playlistTokenSource is null)
        {
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="DownloadAllPlaylists">
                @GetDownloadText()
            </MudButton>
        }
        else
        {
            <MudButton Color="Color.Error"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="CancelPlaylistDownload">
                Cancel
            </MudButton>
        }
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Max="1"
                           Value="@_playlistProgress"
                           Class="my-7"
                           Buffer="true" />
        <div class="justify-content-between d-flex align-items-center">
            <div class="mx-3">
                <MudButton Color="Color.Error"
                           Variant="Variant.Outlined"
                @onclick="ClearPlaylistVideos">
                    Clear Videos
                </MudButton>
            </div>
            <div class="w-100">
                <MudAutocomplete T="string"
                                 Label="@GetSearchBarText()"
                                 Variant="Variant.Outlined"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterPlaylistVideo"
                                 SearchFunc="SearchPlaylistVideos"
                                 ResetValueOnEmptyText="true"
                                 ValueChanged="HandleSearchValueChanged"/>
            </div>
            <div class="mx-3">
                <MudButton @onclick="SaveAllVideos"
                           Color="Color.Success"
                           Variant="Variant.Outlined">
                    Save Videos
                </MudButton>
            </div>
        </div>
        @if (_visibleVideos?.Count > 0 || videoLibrary.PlaylistVideos.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            @if (string.IsNullOrWhiteSpace(_currentDownloadingVideo) is false)
            {
                <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingVideo</MudAlert>
            }
            <MudGrid>
                <MudVirtualize Items="_visibleVideos" Context="v" OverscanCount="6">
                    <VideoComponent @key="v.VideoId"
                                    CardSize="4"
                                    Video="v"
                                    Index="GetIndex(v)"
                                    RemoveEvent="(() => RemovePlaylistVideo(v))" />
                </MudVirtualize>
            </MudGrid>
            @if (_loadedItems < videoLibrary.PlaylistVideos.Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreVideos">
                        Load More
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>

<MudDialog IsVisible="_showDialog" Class="backdrop-blur">
    <DialogContent>
        <MudText Typo="Typo.subtitle1">It appears your URL is a playlist.</MudText>
        <MudText Typo="Typo.body1">Would you like to download your video's Url?</MudText>
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Buffer="true"
                           Max="1"
                           Value="@_videoProgress"
                           Class="my-7" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="(() => DownloadFirstVideo(_firstVideoInPlaylistUrl))">Download</MudButton>
        <MudButton OnClick="(() => _showDialog = !_showDialog)">Cancel</MudButton>
    </DialogActions>
</MudDialog>



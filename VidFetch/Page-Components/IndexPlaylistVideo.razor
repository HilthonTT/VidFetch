@inject IVideoLibrary videoLibrary
@inject IYoutube youtube
@inject IVideoData videoData
@inject ISettingsData settingsData
@inject ITokenHelper tokenHelper
@inject IFolderHelper folderHelper
@inject ISearchHelper<VideoModel> searchHelper
@inject IGenericGeneralHelper<VideoModel> genericHelper
@inject ISnackbarHelper snackbarHelper
@inject ILoadedItemsCache loadedItemsCache
@inject ILanguageExtension languageExtension
@inject IClipboard clipboard

<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudFab OnClick="LoadPlaylist"
                    Color="Color.Primary"
                    StartIcon="@Icons.Material.Filled.Link"
                    Label="@GetDictionary()[KeyWords.PasteALink]" />
            @if (_playlistTokenSource is null)
            {
                <MudFab OnClick="DownloadAllPlaylists"
                        Color="Color.Success"
                        StartIcon="@Icons.Material.Filled.Download"
                        Label="@GetDownloadText()" />
            }
            else
            {
                <MudFab OnClick="CancelPlaylistDownload"
                        Color="Color.Error"
                        StartIcon="@Icons.Material.Filled.Cancel"
                        Label="@GetDictionary()[KeyWords.Cancel]" />
            }
            <MudFab OnClick="OpenFileLocation"
                    Color="Color.Warning"
                    StartIcon="@Icons.Material.Filled.Folder"
                    Label="@GetDictionary()[KeyWords.OpenFolderLocation]" />
            <MudFab OnClick="SaveAllVideos"
                    Color="Color.Success"
                    StartIcon="@Icons.Material.Filled.Save"
                    Label="@GetSaveButtonText()" />
            <MudFab OnClick="CancelPlaylistDownload"
                    Color="Color.Error"
                    StartIcon="@Icons.Material.Filled.Delete"
                    Label="@GetClearButtonText()" />
        </MudStack>
    </MudItem>
</MudGrid>
<MudGrid Spacing="5" Class="mb-12">
    <MudItem xs="12">
        <div class="w-100">
            <MudAutocomplete T="string"
                             Label="@GetSearchBarText()"
                             Variant="Variant.Outlined"
                             AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                             OnAdornmentClick="FilterPlaylistVideo"
                             SearchFunc="SearchPlaylistVideos"
                             ResetValueOnEmptyText="true"
                             ValueChanged="HandleSearchValueChanged" />
        </div>
        @if (_visibleVideos?.Count > 0 || videoLibrary.PlaylistVideos.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            @if (string.IsNullOrWhiteSpace(_currentDownloadingVideo) is false)
            {
                <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingVideo</MudAlert>
            }
            <MudGrid>
                <MudVirtualize Items="_visibleVideos" Context="v" OverscanCount="6">
                    <VideoComponent @key="v.VideoId"
                                    CardSize="4"
                                    Video="v"
                                    Index="GetIndex(v)"
                                    RemoveEvent="(() => RemovePlaylistVideo(v))" />
                </MudVirtualize>
            </MudGrid>
            @if (_loadedItems < videoLibrary.PlaylistVideos.Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreVideos">
                        @GetDictionary()[KeyWords.LoadMore]
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>

<MudDialog IsVisible="_showDialog" Class="backdrop-blur">
    <DialogContent>
        <MudText Typo="Typo.subtitle1">
            @GetDictionary()[KeyWords.UrlPlaylistTitle]
        </MudText>
        <MudText Typo="Typo.body1">
            @GetDictionary()[KeyWords.UrlPlaylistText]
        </MudText>
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Buffer="true"
                           Max="1"
                           Value="@_videoProgress"
                           Class="my-7" />
    </DialogContent>
    <DialogActions>
        @if (_videoTokenSource is null)
        {
            <MudButton Color="Color.Primary" OnClick="(() => DownloadFirstVideo(_firstVideoInPlaylistUrl))">
                @GetDictionary()[KeyWords.Download]
            </MudButton>
        }
        <MudButton OnClick="CancelVideoDownload" Color="Color.Error">
            @GetDictionary()[KeyWords.Cancel]
        </MudButton>
    </DialogActions>
</MudDialog>


<MudAppBar Bottom="true" Fixed="true" Color="Color.Dark" Elevation="1">
    <MudText Class="mx-5">@GetProgressText()</MudText>
    <MudProgressLinear Color="Color.Primary"
                       Striped="true"
                       Size="Size.Medium"
                       Max="1"
                       Value="@_playlistProgress"
                       Class="my-7"
                       Buffer="true" />
</MudAppBar>
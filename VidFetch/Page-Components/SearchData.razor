@typeparam TData

@inject IVideoLibrary videoLibrary
@inject ITokenHelper tokenHelper
@inject ISearchHelper<TData> searchHelper
@inject IVideoLibraryFilterHelper<TData> filterHelper
@inject IFolderHelper folderHelper
@inject ILoadedItemsCache loadedItemsCache
@inject ILanguageExtension languageExtension


<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudTextField @bind-Value="_url"
                      Class="mb-4"
                      Label="@GetInputBarLabelText()"
                      HelperText="@GetInputBarHelperText()"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="SearchTData"
                      Required="true"
                      Clearable="true" />
    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12">
        <div class="justify-content-between d-flex align-items-center">
            <div class="mx-3">
                <MudButtonGroup OverrideStyles=false>
                    @if (_tokenSource is not null)
                    {
                        <MudButton Color="Color.Error"
                                   Variant="Variant.Outlined"
                                   Size="Size.Small"
                        @onclick="CancelDataSearch">
                            <div class="d-flex align-items-center flex-column">
                                <div class="d-flex justify-content-center">
                                    <MudIcon class="mx-auto" Icon="@Icons.Material.Filled.Cancel" Size="Size.Small"></MudIcon>
                                </div>
                                <div class="text-center">
                                    <MudText Class="text-uppercase fw-bold">@GetDictionary()[KeyWords.Cancel]</MudText>
                                </div>
                            </div>
                        </MudButton>
                    }
                    else
                    {
                        <MudButton @onclick="SearchTData"
                                   Color="Color.Success"
                                   Variant="Variant.Outlined">
                            <div class="d-flex align-items-center flex-column">
                                <div class="d-flex justify-content-center">
                                    <MudIcon class="mx-auto" Icon="@Icons.Material.Filled.Search" Size="Size.Small"></MudIcon>
                                </div>
                                <div class="text-center">
                                    <MudText Class="text-uppercase fw-bold">@GetDictionary()[KeyWords.Search]</MudText>
                                </div>
                            </div>
                        </MudButton>
                    }
                </MudButtonGroup>
            </div>
            <div class="w-100">
                <MudAutocomplete T="string"
                                 Label="@GetSearchBarText()"
                                 Variant="Variant.Outlined"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterData"
                                 SearchFunc="FilterSearchData"
                                 ResetValueOnEmptyText="true"
                                 ValueChanged="HandleSearchValueChanged" />
            </div>
            <div class="mx-3">
                <MudButtonGroup OverrideStyles=false>
                    <MudButton @onclick="OpenFileLocation"
                               Class="mx-3"
                               Variant="Variant.Outlined"
                               Color="Color.Warning"
                               Size="Size.Small">
                        <div class="d-flex align-items-center flex-column">
                            <div class="d-flex justify-content-center">
                                <MudIcon class="mx-auto" Icon="@Icons.Material.Filled.Folder" Size="Size.Small"></MudIcon>
                            </div>
                            <div class="text-center">
                                <MudText Class="text-uppercase fw-bold">
                                    @GetDictionary()[KeyWords.OpenFolderLocation]
                                </MudText>
                            </div>
                        </div>
                    </MudButton>
                    <MudButton Color="Color.Error"
                               Variant="Variant.Outlined"
                               Size="Size.Small"
                    @onclick="ClearData">
                        <div class="d-flex align-items-center flex-column">
                            <div class="d-flex justify-content-center">
                                <MudIcon class="mx-auto" Icon="@Icons.Material.Filled.Delete" Size="Size.Small"></MudIcon>
                            </div>
                            <div class="text-center">
                                <MudText Class="text-uppercase fw-bold">
                                    @GetDictionary()[KeyWords.Clear]
                                    @GetDataTypeName()s
                                </MudText>
                            </div>
                        </div>
                    </MudButton>
                </MudButtonGroup>
            </div>
        </div>
        @if (_visibleData?.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            <MudGrid>
                @if (typeof(TData) == typeof(VideoModel))
                {
                    <MudVirtualize Items="GetVideos()" Context="v" OverscanCount="ItemsPerPage">
                        <VideoComponent @key="v.VideoId"
                                        Video="v"
                                        CardSize="4"
                                        RemoveEvent="(() => RemoveData((TData)(dynamic)v))" />
                    </MudVirtualize>
                }
                else if (typeof(TData) == typeof(ChannelModel))
                {
                    <MudVirtualize Items="GetChannels()" Context="c" OverscanCount="ItemsPerPage">
                        <ChannelComponent @key="c.ChannelId"
                                        Channel="c"
                                        CardSize="4"
                                        RemoveEvent="(() => RemoveData((TData)(dynamic)c))" />
                    </MudVirtualize>
                }
                else
                {
                    <MudVirtualize Items="GetPlaylists()" Context="p" OverscanCount="ItemsPerPage">
                        <PlaylistComponent @key="p.PlaylistId"
                                          Playlist="p"
                                          CardSize="4"
                                          RemoveEvent="(() => RemoveData((TData)(dynamic)p))" />
                    </MudVirtualize>
                }
            </MudGrid>
            @if (_loadedItems < GetDataResults().Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreData">
                        @GetDictionary()[KeyWords.LoadMore]
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>




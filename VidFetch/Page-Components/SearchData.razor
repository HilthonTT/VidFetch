@typeparam TData

@inject IVideoLibrary videoLibrary
@inject ITokenHelper tokenHelper
@inject ISearchHelper<TData> searchHelper
@inject IVideoLibraryFilterHelper<TData> filterHelper
@inject ILoadedItemsCache loadedItemsCache
@inject ILanguageExtension languageExtension

<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudTextField @bind-Value="_url"
                      Class="mb-4"
                      Label="@GetInputBarLabelText()"
                      HelperText="@GetInputBarHelperText()"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="SearchTData"
                      Required="true"
                      Clearable="true"/>
    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12">
        <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center">
            @if (_tokenSource is not null)
            {
                <MudFab OnClick="CancelDataSearch"
                        Color="Color.Error"
                        StartIcon="@Icons.Material.Filled.Cancel"
                        Label="@GetDictionary()[KeyWords.Cancel]" />
            }
            else
            {
                <MudFab OnClick="SearchTData"
                        Color="Color.Success"
                        StartIcon="@Icons.Material.Filled.Search"
                        Label="@GetDictionary()[KeyWords.Search]" />
            }
            <MudNumericField 
                @bind-Value="_maxItemsBeingLoaded"
                HideSpinButtons="true" 
                Label="@GetDictionary()[KeyWords.Amount]" 
                HelperText="@GetDictionary()[KeyWords.SearchTakeLongerWarning]"
                Variant="Variant.Outlined" 
                Step="1" />
            <MudAutocomplete T="string"
                             Label="@GetSearchBarText()"
                             HelperText="Search your loaded items."
                             Variant="Variant.Outlined"
                             AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                             OnAdornmentClick="FilterData"
                             SearchFunc="FilterSearchData"
                             ResetValueOnEmptyText="true"
                             ValueChanged="HandleSearchValueChanged" />
            <MudFab OnClick="ClearData"
                    Color="Color.Error"
                    StartIcon="@Icons.Material.Filled.Delete"
                    Label="@GetClearButtonText()" />
        </MudStack>
        @if (_visibleData?.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            <MudGrid>
                @if (typeof(TData) == typeof(VideoModel))
                {
                    <MudVirtualize Items="GetVideos()" Context="v" OverscanCount="ItemsPerPage">
                        <VideoComponent @key="v.VideoId"
                                        Video="v"
                                        CardSize="4"
                                        RemoveEvent="(() => RemoveData((TData)(dynamic)v))" />
                    </MudVirtualize>
                }
                else if (typeof(TData) == typeof(ChannelModel))
                {
                    <MudVirtualize Items="GetChannels()" Context="c" OverscanCount="ItemsPerPage">
                        <ChannelComponent @key="c.ChannelId"
                                        Channel="c"
                                        CardSize="4"
                                        RemoveEvent="(() => RemoveData((TData)(dynamic)c))" />
                    </MudVirtualize>
                }
                else
                {
                    <MudVirtualize Items="GetPlaylists()" Context="p" OverscanCount="ItemsPerPage">
                        <PlaylistComponent @key="p.PlaylistId"
                                          Playlist="p"
                                          CardSize="4"
                                          RemoveEvent="(() => RemoveData((TData)(dynamic)p))" />
                    </MudVirtualize>
                }
            </MudGrid>
            @if (_loadedItems < GetDataResults().Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreData">
                        @GetDictionary()[KeyWords.LoadMore]
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>

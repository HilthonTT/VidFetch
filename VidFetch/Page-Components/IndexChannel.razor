@inject IVideoLibrary videoLibrary
@inject IYoutube youtube
@inject ISearchHelper searchHelper
@inject IVideoLibraryHelper videoLibraryHelper
@inject ITokenHelper tokenHelper
@inject ISnackbar snackbar
@inject IChannelData channelData


<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudTextField @bind-Value="_channelUrl"
                      Class="mb-4"
                      Label="Enter Channel URL"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="LoadChannel"
                      Required="true"
                      Clearable="true" />
    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12">
        <div class="justify-content-between d-flex align-items-center">
            <div class="mx-3">
                <MudButton Color="Color.Error"
                           Variant="Variant.Outlined"
                @onclick="ClearChannels">
                    Clear Channels
                </MudButton>
            </div>
            <div class="w-100">
                <MudAutocomplete T="string"
                                 Label="@GetSearchBarText()"
                                 Variant="Variant.Outlined"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterChannels"
                                 SearchFunc="SearchChannels"
                                 ResetValueOnEmptyText="true" 
                                 ValueChanged="HandleSearchValueChanged"/>
            </div>
            <div class="mx-3">
                <MudButton @onclick="SaveAllChannels"
                           Color="Color.Success"
                           Variant="Variant.Outlined">
                    Save Channels
                </MudButton>
            </div>
        </div>
        @if (_visibleChannels?.Count > 0 || videoLibrary.Channels.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            <MudGrid>
                <MudVirtualize Items="_visibleChannels" Context="c" OverscanCount="6">
                    <ChannelComponent @key="c.ChannelId"
                                      Channel="c"
                                      CardSize="4"
                                      RemoveEvent="(() => RemoveChannel(c))" />
                </MudVirtualize>
            </MudGrid>
            @if (_loadedItems < videoLibrary.PlaylistVideos.Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreChannels">
                        Load More
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>


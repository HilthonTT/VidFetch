@typeparam TData

@inject IVideoData videoData
@inject IPlaylistData playlistData
@inject IChannelData channelData
@inject ISettingsData settingsData
@inject IYoutube youtube
@inject ITokenHelper tokenHelper
@inject ISearchHelper<TData> searchHelper
@inject IGenericGeneralHelper<TData> generalHelper
@inject IFolderHelper folderHelper
@inject ISnackbarHelper snackbarHelper
@inject ILoadedItemsCache loadedItemsCache
@inject ILanguageExtension languageExtension


<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center" Spacing="3">
            @if (_allVideosTokenSource is null && IsVideoModel())
            {
                <MudFab OnClick="DownloadVideos"
                        Color="Color.Success"
                        StartIcon="@Icons.Material.Filled.Download"
                        Label="@GetDownloadVideoText()" />
            }

            else if (_allVideosTokenSource is not null && IsVideoModel())
            {
                <MudFab OnClick="DownloadVideos"
                        Color="Color.Error"
                        StartIcon="@Icons.Material.Filled.Cancel"
                        Label="@GetDictionary()[KeyWords.Cancel]" />
            }        
            @if (_updateTokenSource is null)
            {
                <MudFab OnClick="UpdateAllDatas"
                        Color="Color.Warning"
                        StartIcon="@Icons.Material.Filled.Update"
                        Label="@GetDictionary()[KeyWords.UpdateData]" />
            }
            else
            {
                <MudFab OnClick="CancelUpdateData"
                        Color="Color.Error"
                        StartIcon="@Icons.Material.Filled.Cancel"
                        Label="@GetDictionary()[KeyWords.CancelUpdateData]" />
            }
            <MudFab OnClick="OpenDialog"
                    Color="Color.Error"
                    StartIcon="@Icons.Material.Filled.Delete"
                    Label="@GetDeleteButtonText()" />
        </MudStack>
    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12" Class="mb-12">
        <div class="w-100">
            <MudAutocomplete T="string"
                             Label="@GetSearchBarText()"
                             Variant="Variant.Outlined"
                             AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                             OnAdornmentClick="FilterData"
                             SearchFunc="FilterSearchData"
                             ResetValueOnEmptyText="true"
                             ValueChanged="HandleSearchValueChanged" 
                             Culture="GetCulture()"/>
        </div>
        @if (_visibleData?.Count > 0 || _datas?.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            @if (string.IsNullOrWhiteSpace(_downloadingVideoText) is false)
            {
                <MudAlert Class="mb-4" Severity="Severity.Warning">@_downloadingVideoText</MudAlert>
            }
            <MudGrid>
                @if (typeof(TData) == typeof(VideoModel))
                {
                    <MudVirtualize Items="GetVideos()" Context="v" OverscanCount="ItemsPerPage">
                        <VideoComponent @key="v.VideoId"
                                        Video="v"
                                        CardSize="4"
                                        RemoveEvent="(() => DeleteData((TData)(dynamic)v))" />
                    </MudVirtualize>
                }
                else if (typeof(TData) == typeof(ChannelModel))
                {
                    <MudVirtualize Items="GetChannels()" Context="c" OverscanCount="ItemsPerPage">
                        <ChannelComponent @key="c.ChannelId"
                                          Channel="c"
                                          CardSize="4"
                                          RemoveEvent="(() => DeleteData((TData)(dynamic)c))" />
                    </MudVirtualize>
                }
                else
                {
                    <MudVirtualize Items="GetPlaylists()" Context="p" OverscanCount="ItemsPerPage">
                        <PlaylistComponent @key="p.PlaylistId"
                                           Playlist="p"
                                           CardSize="4"
                                           RemoveEvent="(() => DeleteData((TData)(dynamic)p))" />
                    </MudVirtualize>
                }
            </MudGrid>
            @if (_loadedItems < _datas.Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreData">
                        @GetDictionary()[KeyWords.LoadMore]
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>


<MudDialog IsVisible="_isVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            @GetDictionary()[KeyWords.DeleteAllWarningTitle]
            @GetDictionary()[KeyWords.Videos].ToLower()
            <MudIcon Icon="@Icons.Material.Filled.Dangerous"></MudIcon>
        </MudText>
    </TitleContent>
    <DialogContent>
        @GetDictionary()[KeyWords.DeleteAllWarningText]
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CloseDialog" Color="Color.Error">@GetDictionary()[KeyWords.Cancel]</MudButton>
        <MudButton Color="Color.Primary" OnClick="DeleteAllData">@GetDictionary()[KeyWords.Confirm]</MudButton>
    </DialogActions>
</MudDialog>


@if (IsVideoModel())
{
    <MudAppBar Bottom="true" Fixed="true" Color="Color.Dark" Elevation="1">
        <MudText Class="mx-5">@GetProgressText()</MudText>
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Max="1"
                           Value="@_videosProgress"
                           Class="my-7"
                           Buffer="true"
                           Rounded="true" />
    </MudAppBar>
}

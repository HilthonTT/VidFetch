@inject IVideoLibrary videoLibrary
@inject ISettingsLibrary settingsLibrary
@inject IVideoData videoData
@inject IYoutube youtube
@inject ISearchHelper searchHelper
@inject ITokenHelper tokenHelper
@inject IVideoLibraryHelper videoLibraryHelper
@inject IFolderHelper folderHelper
@inject ISnackbar snackbar

<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudTextField @bind-Value="_videoUrl"
                      Label="Enter Video URL"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="LoadVideoOrPlaylistVideos"
                      Required="true"
                      Clearable="true" />

    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12">
        @if (_allVideosTokenSource is null)
        {
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="DownloadAllVideos">
                @GetDownloadText()
            </MudButton>
        }
        else
        {
            <MudButton Color="Color.Error"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="CancelVideosDownload">
                Cancel
            </MudButton>
        }
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Max="1"
                           Value="@_videosProgress"
                           Class="my-7"
                           Buffer="true" />
        <div class="justify-content-between d-flex align-items-center">
            <div class="mx-3">
                <MudButton Color="Color.Error"
                           Variant="Variant.Outlined"
                @onclick="ClearVideos">
                    Clear Videos
                </MudButton>
            </div>
            <div class="w-100">
                <MudAutocomplete T="string"
                                 Label="@GetSearchBarText()"
                                 Variant="Variant.Outlined"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterVideos"
                                 SearchFunc="SearchVideos"
                                 ResetValueOnEmptyText="true"
                                 ValueChanged="HandleSearchValueChanged"/>
            </div>
            <div class="mx-3">
                <MudButton Color="Color.Warning"
                           Variant="Variant.Outlined"
                @onclick="OpenFileLocation">
                    Open Folder Location
                </MudButton>
            </div>
        </div>
        @if (_visibleVideos?.Count > 0 || videoLibrary.Videos.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            @if (string.IsNullOrWhiteSpace(_currentDownloadingVideo) is false)
            {
                <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingVideo</MudAlert>
            }
            <MudGrid>
                <MudVirtualize Items="_visibleVideos" Context="v" OverscanCount="6">
                    <VideoComponent @key="v.VideoId"
                                    CardSize="4"
                                    Video="v"
                                    RemoveEvent="(() => RemoveVideo(v))" />
                </MudVirtualize>
            </MudGrid>
            @if (_loadedItems < videoLibrary.Videos.Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreVideos">
                        Load More
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>



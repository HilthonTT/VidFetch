@inject IVideoLibrary videoLibrary
@inject ISettingsLibrary settingsLibrary
@inject IVideoData videoData
@inject IYoutube youtube
@inject ISearchHelper searchHelper
@inject ITokenHelper tokenHelper
@inject IVideoLibraryHelper videoLibraryHelper
@inject IFolderHelper folderHelper
@inject ISnackbar snackbar

<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        <MudTextField @bind-Value="_videoUrl"
                      Class="mb-4"
                      Label="Enter Video URL"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="LoadVideoOrPlaylistVideos"
                      Required="true"
                      Clearable="true" />
        <MudButton Class="w-100"
                   Color="Color.Warning"
                   Variant="Variant.Outlined"
        @onclick="OpenFileLocation">
            Open Folder Location
        </MudButton>
    </MudItem>
</MudGrid>
<MudGrid Spacing="5">
    <MudItem xs="12">
        @if (_allVideosTokenSource is null)
        {
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="DownloadAllVideos">
                @GetDownloadText()
            </MudButton>
        }
        else
        {
            <MudButton Color="Color.Error"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="CancelVideosDownload">
                Cancel
            </MudButton>
        }
        <MudButton Color="Color.Warning"
                   Variant="Variant.Filled"
                   Class="w-100 mb-3"
        @onclick="ClearVideos">
            Clear Videos
        </MudButton>
        <MudAutocomplete T="string" Label="@GetSearchBarText()"
                         Variant="Variant.Outlined"
                         Class="mb-4"
                         HelperText="Search the loaded videos."
                         AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                         OnAdornmentClick="FilterVideos"
                         SearchFunc="SearchVideos"
                         ResetValueOnEmptyText="true"
        @bind-Value="_videoSearchText" />
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Max="1"
                           Value="@_videosProgress"
                           Class="my-7"
                           Buffer="true" />
        @if (string.IsNullOrWhiteSpace(_currentDownloadingVideo) is false)
        {
            <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingVideo</MudAlert>
        }
       <MudGrid>
            <MudVirtualize Items="videoLibrary.Videos" Context="v" OverscanCount="10">
                <VideoComponent @key="v.VideoId"
                                CardSize="4"
                                Video="v"
                                RemoveEvent="(() => RemoveVideo(v))" />
            </MudVirtualize>
       </MudGrid>
    </MudItem>
</MudGrid>



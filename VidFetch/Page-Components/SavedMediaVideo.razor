@inject IVideoData videoData
@inject IYoutube youtube
@inject ITokenHelper tokenHelper
@inject ISearchHelper searchHelper
@inject IFolderHelper folderHelper
@inject ISettingsLibrary settingsLibrary
@inject ISnackbar snackbar

<MudGrid Spacing="5">
    <MudItem xs="12" Class="text-center">
        @if (_allVideosTokenSource is null)
        {
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="DownloadSavedVideos">
                @GetDownloadVideoText()
            </MudButton>
        }
        else
        {
            <MudButton Color="Color.Error"
                       Variant="Variant.Filled"
                       Class="w-100 mb-3"
            @onclick="CancelDownload">
                Cancel
            </MudButton>
        }
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Max="1"
                           Value="@_videosProgress"
                           Class="my-7"
                           Buffer="true" />

        <div class="justify-content-between d-flex align-items-center">
            <div class="mx-3">
                <MudButton Color="Color.Error"
                           Variant="Variant.Outlined">
                    Delete Videos
                </MudButton>
            </div>
            <div class="w-100">
                <MudAutocomplete T="string"
                                 Label="@GetSearchBarText()"
                                 Variant="Variant.Outlined"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterVideos"
                                 SearchFunc="SearchVideos"
                                 ResetValueOnEmptyText="true"
                                 ValueChanged="HandleSearchValueChanged"/>
            </div>
            <div class="mx-3">
                <MudButton Color="Color.Warning"
                           Variant="Variant.Outlined"
                @onclick="OpenFileLocation">
                    Open Folder Location
                </MudButton>
            </div>
        </div>
        @if (_visibleVideos?.Count > 0 || _videos?.Count > 0)
        {
            <MudDivider Class="mb-6 mt-6"></MudDivider>
            @if (string.IsNullOrWhiteSpace(_currentDownloadingVideo) is false)
            {
                <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingVideo</MudAlert>
            }
            <MudGrid>
                <MudVirtualize Items="_visibleVideos" Context="v" OverscanCount="6">
                    <VideoComponent @key="v.VideoId"
                                    Video="v"
                                    CardSize="4"
                                    RemoveEvent="(() => DeleteVideo(v))" />
                </MudVirtualize>
            </MudGrid>
            @if (_loadedItems < _videos.Count)
            {
                <div class="text-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                    @onclick="LoadMoreVideos">
                        Load More
                    </MudButton>
                </div>
            }
        }
    </MudItem>
</MudGrid>


@*<MudDialog IsVisible="_isVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Delete all videos
            <MudIcon Icon="@Icons.Material.Filled.Dangerous"></MudIcon>
        </MudText>
    </TitleContent>
    <DialogContent>
        Deleting all of your videos is irreversible!
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CloseDialog" Color="Color.Error">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="DeleteAllVideos">Confirm</MudButton>
    </DialogActions>
</MudDialog>
*@

@page "/Search"
@inject IYoutube youtube
@inject IVideoLibrary videoLibrary
@inject ISnackbar snackbar
@inject ISearchHelper searchHelper
@inject IFolderHelper folderHelper
@inject ITokenHelper tokenHelper

<MudText Typo="Typo.h4" Class="text-center text-uppercase mb-4">
    Search
    <MudIcon Icon="@Icons.Custom.Brands.YouTube" Title="Search"></MudIcon>
</MudText>
<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Centered="true">
    <MudTabPanel Text="Videos">
        <MudGrid Spacing="5">
            <MudItem xs="12" Class="text-center">
                <MudTextField @bind-Value="_videoSearchText"
                              Class="mb-4"
                              Label="Input the video's title"
                              HelperText="This is where you input video's title."
                              Variant="Variant.Outlined"
                              Adornment="Adornment.End"
                              AdornmentIcon="@Icons.Material.Filled.Download"
                              OnAdornmentClick="SearchVideos"
                              Required="true"
                              Clearable="true" />
                <MudButton Class="mt-4 w-100"
                           Color="Color.Warning"
                           Variant="Variant.Outlined"
                @onclick="OpenFileLocation">
                    Open Folder Location
                </MudButton>
            </MudItem>
        </MudGrid>
        <MudGrid Spacing="5">
            <MudItem xs="12">
                <MudAutocomplete T="string" Label="@GetVideoSearchBarText()"
                                 Variant="Variant.Outlined"
                                 Class="mb-4"
                                 HelperText="Search the loaded videos."
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterVideos"
                                 SearchFunc="FilterSearchVideos"
                                 ResetValueOnEmptyText="true" />
                @if (_videoTokenSource is not null)
                {
                    <MudButton Color="Color.Error"
                               Variant="Variant.Filled"
                               Class="w-100 mb-4"
                    @onclick="CancelVideoSearch">
                        Cancel Video Search
                    </MudButton>
                }
                <MudGrid>
                    <MudVirtualize Items="_visibleVideos" Context="v" OverscanCount="6">
                        <VideoComponent @key="v.Id"
                                        Video="v"
                                        CardSize="4"
                                        RemoveEvent="(() => RemoveVideo(v))" />
                    </MudVirtualize>
                </MudGrid>
                @if (_loadedVideos < videoLibrary.VideoResults.Count)
                {
                    <div class="text-center mt-4">
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                        @onclick="LoadMoreVideos">
                            Load More
                        </MudButton>
                    </div>
                }
            </MudItem>
        </MudGrid>
    </MudTabPanel>
    <MudTabPanel Text="Channels">
        <MudGrid Spacing="5">
            <MudItem xs="12" Class="text-center">
                <MudTextField @bind-Value="_channelSearchText"
                              Class="mb-4"
                              Label="Input the channel's title"
                              HelperText="This is where you input the channel's title."
                              Variant="Variant.Outlined"
                              Adornment="Adornment.End"
                              AdornmentIcon="@Icons.Material.Filled.Download"
                              OnAdornmentClick="SearchChannels"
                              Required="true"
                              Clearable="true" />
            </MudItem>
        </MudGrid>
        <MudGrid Spacing="5">
            <MudItem xs="12">
                <MudAutocomplete T="string" Label="@GetChannelSearchBarText()"
                                 Variant="Variant.Outlined"
                                 Class="mb-4"
                                 HelperText="Search the loaded channels"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterChannels"
                                 SearchFunc="FilterSearchChannels"
                                 ResetValueOnEmptyText="true" />
                @if (_channelTokenSource is not null)
                {
                    <MudButton Color="Color.Error"
                               Variant="Variant.Filled"
                               Class="w-100 mb-4"
                    @onclick="CancelChannelSearch">
                        Cancel Channel Search
                    </MudButton>
                }
                <MudGrid>
                    <MudVirtualize Items="_visibleChannels" Context="c" OverscanCount="6">
                        <ChannelComponent @key="c.Id"
                                          Channel="c"
                                          CardSize="4"
                                          RemoveEvent="(() => RemoveChannel(c))" />
                    </MudVirtualize>
                </MudGrid>
                @if (_loadedChannels < videoLibrary.ChannelResults.Count)
                {
                    <div class="text-center mt-4">
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                        @onclick="LoadMoreChannels">
                            Load More
                        </MudButton>
                    </div>
                }
            </MudItem>
        </MudGrid>
    </MudTabPanel>
    <MudTabPanel Text="Playlists">
        <MudGrid Spacing="5">
            <MudItem xs="12" Class="text-center">
                <MudTextField @bind-Value="_playlistSearchText"
                              Class="mb-4"
                              Label="Input the playlist's title"
                              HelperText="This is where you input the playlist's title."
                              Variant="Variant.Outlined"
                              Adornment="Adornment.End"
                              AdornmentIcon="@Icons.Material.Filled.Download"
                              OnAdornmentClick="SearchPlaylists"
                              Required="true"
                              Clearable="true" />
            </MudItem>
        </MudGrid>
        <MudGrid Spacing="5">
            <MudItem xs="12">
                <MudAutocomplete T="string" Label="@GetPlaylistSearchBarText()"
                                 Variant="Variant.Outlined"
                                 Class="mb-4"
                                 HelperText="Search the loaded playlists"
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterPlaylists"
                                 SearchFunc="FilterSearchPlaylists"
                                 ResetValueOnEmptyText="true" />
                @if (_playlistTokenSource is not null)
                {
                    <MudButton Color="Color.Error"
                               Variant="Variant.Filled"
                               Class="w-100 mb-4"
                    @onclick="CancelPlaylistSearch">
                        Cancel Playlist Search
                    </MudButton>
                }
                <MudGrid>
                    <MudVirtualize Items="_visiblePlaylists" Context="p" OverscanCount="6">
                        <PlaylistComponent @key="p.PlaylistId"
                                           Playlist="p"
                                           CardSize="4"
                                           RemoveEvent="(() => RemovePlaylist(p))" />
                    </MudVirtualize>
                </MudGrid>
                @if (_loadedPlaylists < videoLibrary.PlaylistResults.Count)
                {
                    <div class="text-center mt-4">
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                        @onclick="LoadMorePlaylists">
                            Load More
                        </MudButton>
                    </div>
                }
            </MudItem>
        </MudGrid>
    </MudTabPanel>
</MudTabs>




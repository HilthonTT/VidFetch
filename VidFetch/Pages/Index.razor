@page "/PasteLinkPage"
@inject IYoutube youtube
@inject IVideoLibrary videoLibrary
@inject ISettingsLibrary settingsLibrary
@inject ISnackbar snackbar
@inject ISearchHelper searchHelper
@inject ITokenHelper tokenHelper
@inject IVideoLibraryHelper videoLibraryHelper
@inject IFolderHelper folderHelper
@inject IVideoData videoData


<MudText Typo="Typo.h4" Class="text-center text-uppercase mb-4">
    Vid Fetch
    <MudIcon Icon="@Icons.Custom.Brands.YouTube" Title="Vid Fetch"></MudIcon>
</MudText>
@if (string.IsNullOrWhiteSpace(_errorMessage) is false)
{
    <MudAlert Severity="Severity.Error" Class="mb-4">
        @_errorMessage
    </MudAlert>
}


<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Centered="true">
    <MudTabPanel Text="Videos">
        <MudGrid Spacing="5">
            <MudItem xs="12" Class="text-center">
                <MudTextField @bind-Value="_videoUrl"
                              Class="mb-4"
                              Label="Enter Video URL"
                              Variant="Variant.Outlined"
                              Adornment="Adornment.End"
                              AdornmentIcon="@Icons.Material.Filled.Download"
                              OnAdornmentClick="LoadVideoOrPlaylistVideos"
                              Required="true"
                              Clearable="true" />
                <MudButton Class="w-100"
                           Color="Color.Warning"
                           Variant="Variant.Outlined"
                @onclick="OpenFileLocation">
                    Open Folder Location
                </MudButton>
            </MudItem>
        </MudGrid>
        <MudGrid Spacing="5">
            <MudItem xs="6">
                @if (_allVideosTokenSource is null)
                {
                    <MudButton Color="Color.Primary"
                               Variant="Variant.Filled"
                               Class="w-100 mb-3"
                    @onclick="DownloadAllVideos">
                        @GetDownloadVideoText()
                    </MudButton>
                }
                else
                {
                    <MudButton Color="Color.Error"
                               Variant="Variant.Filled"
                               Class="w-100 mb-3"
                    @onclick="CancelVideosDownload">
                        Cancel
                    </MudButton>
                }
                <MudButton Color="Color.Warning"
                           Variant="Variant.Filled"
                           Class="w-100 mb-3"
                @onclick="ClearVideos">
                    Clear Videos
                </MudButton>
                <MudAutocomplete T="string" Label="@GetVideoSearchBarText()"
                                 Variant="Variant.Outlined"
                                 Class="mb-4"
                                 HelperText="Search the loaded videos."
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterVideos"
                                 SearchFunc="SearchVideos"
                                 ResetValueOnEmptyText="true"
                @bind-Value="_videoSearchText" />
                <MudProgressLinear Color="Color.Primary"
                                   Striped="true"
                                   Size="Size.Medium"
                                   Max="1"
                                   Value="@_videosProgress"
                                   Class="my-7"
                                   Buffer="true" />
                @if (string.IsNullOrWhiteSpace(_currentDownloadingVideo) is false)
                {
                    <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingVideo</MudAlert>
                }
                @if (_isVideoLoading)
                {
                    <div class="text-center">
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                    </div>
                }
                <MudVirtualize Items="videoLibrary.Videos" Context="v" OverscanCount="10">
                    <VideoComponent @key="v.VideoId"
                                    Video="v"
                                    RemoveEvent="(() => RemoveVideo(v))" />
                </MudVirtualize>
            </MudItem>
            <MudItem xs="6">
                @if (_playlistTokenSource is null)
                {
                    <MudButton Color="Color.Primary"
                               Variant="Variant.Filled"
                               Class="w-100 mb-3"
                    @onclick="DownloadAllPlaylists">
                        Download Playlist
                    </MudButton>
                }
                else
                {
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Error"
                               Class="w-100 mb-3"
                    @onclick="CancelPlaylistDownload">
                        Cancel
                    </MudButton>
                }
                <MudButton Color="Color.Warning"
                           Variant="Variant.Filled"
                           Class="w-100 mb-3"
                @onclick="ClearPlaylist">
                    Clear Playlist
                </MudButton>
                <MudAutocomplete T="string" Label="@GetPlaylistVideoSearchBarText()"
                                 Variant="Variant.Outlined"
                                 Class="mb-3"
                                 HelperText="Search the loaded playlist videos."
                                 AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                                 OnAdornmentClick="FilterPlaylistVideo"
                                 SearchFunc="SearchPlaylistVideos"
                                 ResetValueOnEmptyText="true"
                @bind-Value="_playlistVideoSearchText" />
                <MudProgressLinear Color="Color.Primary"
                                   Striped="true"
                                   Size="Size.Medium"
                                   Max="1"
                                   Value="@_playlistProgress"
                                   Class="my-7"
                                   Buffer="true" />
                @if (string.IsNullOrWhiteSpace(_currentDownloadingPlaylistVideo) is false)
                {
                    <MudAlert Class="mb-4" Severity="Severity.Warning">@_currentDownloadingPlaylistVideo</MudAlert>
                }
                @if (_isPlaylistLoading)
                {
                    <div class="text-center">
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                    </div>
                }
                <MudVirtualize Items="videoLibrary.PlaylistVideos" Context="v" OverscanCount="10">
                    <VideoComponent @key="v.Id"
                                    Video="v"
                                    Index="@GetIndex(v)"
                                    RemoveEvent="(() => RemovePlaylistVideo(v))" />
                </MudVirtualize>
            </MudItem>
        </MudGrid>
    </MudTabPanel>
    <MudTabPanel Text="Channels">
        <MudTextField @bind-Value="_channelUrl"
                      Class="mb-4"
                      Label="Enter Channel URL"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="LoadChannel"
                      Required="true"
                      Clearable="true" />

        <MudAutocomplete T="string" Label="@GetChannelSearchBarText()"
                         Variant="Variant.Outlined"
                         Class="mb-4"
                         HelperText="Search the loaded channels."
                         AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                         OnAdornmentClick="FilterChannels"
                         SearchFunc="SearchChannels"
                         ResetValueOnEmptyText="true"
        @bind-Value="_channelSearchText" />
        @if (_isChannelLoading)
        {
            <div class="text-center">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        <MudButton Color="Color.Warning"
                   Variant="Variant.Filled"
                   Class="w-100 mb-3"
        @onclick="ClearChannels">
            Clear Channels
        </MudButton>
        <MudVirtualize Items="videoLibrary.Channels" Context="c" OverscanCount="10">
            <ChannelComponent @key="c.ChannelId"
                              Channel="c"
                              RemoveEvent="(() => RemoveChannel(c))" />
        </MudVirtualize>
    </MudTabPanel>
    <MudTabPanel Text="Playlists">
        <MudTextField @bind-Value="_playlistUrl"
                      Class="mb-4"
                      Label="Enter Playlist URL"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Download"
                      OnAdornmentClick="LoadPlaylist"
                      Required="true"
                      Clearable="true" />

        <MudAutocomplete T="string" Label="@GetPlaylistSearchBarText()"
                         Variant="Variant.Outlined"
                         Class="mb-4"
                         HelperText="Search the loaded playlists."
                         AdornmentIcon="@Icons.Material.Filled.YoutubeSearchedFor"
                         OnAdornmentClick="FilterPlaylists"
                         SearchFunc="SearchPlaylists"
                         ResetValueOnEmptyText="true"
        @bind-Value="_playlistSearchText" />
        <MudButton Color="Color.Warning"
                   Variant="Variant.Filled"
                   Class="w-100 mb-3"
        @onclick="ClearPlaylists">
            Clear Playlists
        </MudButton>
        @if (_isPlaylistLoading)
        {
            <div class="text-center">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        <MudVirtualize Items="videoLibrary.Playlists" Context="p" OverscanCount="10">
            <PlaylistComponent @key="p.PlaylistId"
                              Playlist="p"
                              RemoveEvent="(() => RemovePlaylist(p))" />
        </MudVirtualize>
    </MudTabPanel>
</MudTabs>


<MudDialog IsVisible="_showDialog" Class="backdrop-blur">
    <DialogContent>
        <MudText Typo="Typo.subtitle1">It appears your URL is a playlist.</MudText>
        <MudText Typo="Typo.body1">Would you like to download your video's Url?</MudText>
        <MudProgressLinear Color="Color.Primary"
                           Striped="true"
                           Size="Size.Medium"
                           Buffer="true"
                           Max="1"
                           Value="@_firstPlaylistProgress"
                           Class="my-7" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="(() => DownloadVideo(_firstVideoInPlaylistUrl))">Download</MudButton>
        <MudButton OnClick="ToggleDialog">Cancel</MudButton>
    </DialogActions>
</MudDialog>


